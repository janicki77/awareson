name: Terraform Plan and Apply

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to deploy to (dev, staging, production)'
        required: true
        default: 'dev'

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_ENV: ${{ github.event.inputs.env }}

jobs:
  terraform-plan:
    name: Terraform Plan (${{ env.TF_ENV }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ env.TF_ENV }}.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ env.TF_ENV }}
          path: terraform/tfplan

  terraform-apply:
    name: Terraform Apply (${{ env.TF_ENV }})
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env }}
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name : Manual approve
        uses: trstringer/manual-approval@v1

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ env.TF_ENV }}
          path: ./terraform

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
